# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

version: "3.7"

networks:
  mainflux-base-net:
    driver: bridge

volumes:
  mainflux-auth-db-volume:
  mainflux-users-db-volume:
  mainflux-things-db-volume:
  mainflux-auth-redis-volume:
  mainflux-es-redis-volume:
  mainflux-influxdb-volume:
  mainflux-bootstrap-db-volume:
  mainflux-grafana-volume:
  mainflux-opcua-adapter-volume:
  mainflux-opcua-redis-volume:
  mainflux-twins-db-volume:
  mainflux-twins-db-configdb-volume:
  mainflux-mqtt-broker-volume:

services:
  ui:
    image: mainflux/ui:latest
    container_name: mainflux-ui
    restart: on-failure
    volumes:
      - ./nginx/entrypoint-ui.sh:/entrypoint.sh
    ports:
      - 3000:3000
    networks:
      - mainflux-base-net
    environment:
      MF_UI_PORT: 3000
      MF_UI_MQTT_WS_URL: ws://localhost/mqtt
    command: /entrypoint.sh

  nginx:
    image: nginx:1.16.0-alpine
    container_name: mainflux-nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx-${AUTH-key}.conf:/etc/nginx/nginx.conf.template
      - ./nginx/entrypoint.sh:/entrypoint.sh
      - ./nginx/snippets:/etc/nginx/snippets
      - ./ssl/authorization.js:/etc/nginx/authorization.js
      - ./ssl/certs/mainflux-server.crt:/etc/ssl/certs/mainflux-server.crt
      - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - ./ssl/certs/mainflux-server.key:/etc/ssl/private/mainflux-server.key
      - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - 80:80
      - 443:443
      - 1883:1883
      - 8883:8883
    networks:
      - mainflux-base-net
    env_file:
      - ../.env
    command: /entrypoint.sh
    depends_on:
      - things
      - users
      - mqtt-adapter
      - http-adapter

  nats:
    image: nats:1.3.0
    container_name: mainflux-nats
    command: "-c /etc/nats/nats.conf"
    restart: on-failure
    volumes:
      - ./nats/:/etc/nats
    networks:
      - mainflux-base-net

  ## AUTH SERVICE
  auth-db:
    image: postgres:13.1-alpine
    container_name: mainflux-auth-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: auth
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-auth-db-volume:/var/lib/postgresql/data

  auth:
    image: mainflux/auth:latest
    container_name: mainflux-auth
    depends_on:
      - auth-db
    expose:
      - 8181
    restart: on-failure
    environment:
      MF_AUTH_LOG_LEVEL: debug
      MF_AUTH_DB_HOST: auth-db
      MF_AUTH_DB_PORT: 5432
      MF_AUTH_DB_USER: mainflux
      MF_AUTH_DB_PASS: mainflux
      MF_AUTH_DB: auth
      MF_AUTH_HTTP_PORT: 8189
      MF_AUTH_GRPC_PORT: 8181
      MF_AUTH_SECRET: secret
      MF_JAEGER_URL: jaeger:6831
    ports:
      - 8189:8189
      - 8181:8181
    networks:
      - mainflux-base-net

  ## USERS SERVICE
  users-db:
    image: postgres:13.1-alpine
    container_name: mainflux-users-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: users
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-users-db-volume:/var/lib/postgresql/data

  users:
    image: mainflux/users:latest
    container_name: mainflux-users
    volumes:
      - ./users/emailer/templates/email.tmpl:/email.tmpl
    depends_on:
      - users-db
      - auth
    restart: on-failure
    environment:
      MF_USERS_LOG_LEVEL: debug
      MF_USERS_DB_HOST: users-db
      MF_USERS_DB_PORT: 5432
      MF_USERS_DB_USER: mainflux
      MF_USERS_DB_PASS: mainflux
      MF_USERS_DB: users
      MF_USERS_HTTP_PORT: 8180
      MF_JAEGER_URL: jaeger:6831
      MF_EMAIL_DRIVER: smtp
      MF_EMAIL_HOST: smtp.mailtrap.io
      MF_EMAIL_PORT: 2525
      MF_EMAIL_USERNAME: 18bf7f70705139
      MF_EMAIL_PASSWORD: 2b0d302e775b1e
      MF_EMAIL_FROM_ADDRESS: from@example.com
      MF_EMAIL_FROM_NAME: Example
      MF_EMAIL_TEMPLATE: email.tmpl
      MF_TOKEN_RESET_ENDPOINT: /reset-request
      MF_AUTH_GRPC_URL: auth:8181
      MF_AUTH_GRPC_TIMEOUT: 1s
      MF_USERS_ADMIN_EMAIL: admin@example.com
      MF_USERS_ADMIN_PASSWORD: 12345678
    ports:
      - 8180:8180
    networks:
      - mainflux-base-net

  ## THINGS SERVICE
  things-db:
    image: postgres:13.1-alpine
    container_name: mainflux-things-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: things
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-things-db-volume:/var/lib/postgresql/data

  auth-redis:
    image: redis:5.0-alpine
    container_name: mainflux-auth-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-auth-redis-volume:/data

  things:
    image: mainflux/things:latest
    container_name: mainflux-things
    depends_on:
      - things-db
      - auth
    restart: on-failure
    environment:
      MF_THINGS_LOG_LEVEL: debug
      MF_THINGS_DB_HOST: things-db
      MF_THINGS_DB_PORT: 5432
      MF_THINGS_DB_USER: mainflux
      MF_THINGS_DB_PASS: mainflux
      MF_THINGS_DB: things
      MF_THINGS_CACHE_URL: auth-redis:6379
      MF_THINGS_ES_URL: es-redis:6379
      MF_THINGS_HTTP_PORT: 8182
      MF_THINGS_AUTH_HTTP_PORT: 8989
      MF_THINGS_AUTH_GRPC_PORT: 8183
      MF_THINGS_SECRET: secret
      MF_JAEGER_URL: jaeger:6831
      MF_AUTH_GRPC_URL: auth:8181
      MF_AUTH_GRPC_TIMEOUT: 1s
    ports:
      - 8182:8182
      - 8989:8989
      - 8183:8183
    networks:
      - mainflux-base-net

  jaeger:
    image: jaegertracing/all-in-one:1.13
    container_name: mainflux-jaeger
    ports:
      - 6831:6831/udp
      - 16686:16686
      - 14268:14268
      - 5778:5778
    networks:
      - mainflux-base-net

  vernemq:
    image: mainflux/vernemq:latest
    container_name: mainflux-vernemq
    restart: on-failure
    environment:
      DOCKER_VERNEMQ_ALLOW_ANONYMOUS: "on"
      DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL: error
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-mqtt-broker-volume:/var/lib/vernemq

  ## MQTT ADAPTER
  mqtt-adapter:
    image: mainflux/mqtt:latest
    container_name: mainflux-mqtt
    depends_on:
      - vernemq
      - things
      - nats
    restart: on-failure
    environment:
      MF_MQTT_ADAPTER_LOG_LEVEL: debug
      MF_MQTT_ADAPTER_MQTT_PORT: 1883
      MF_MQTT_ADAPTER_WS_PORT: 8080
      MF_MQTT_ADAPTER_ES_URL: es-redis:6379
      MF_NATS_URL: nats://nats:4222
      MF_MQTT_ADAPTER_MQTT_TARGET_HOST: vernemq
      MF_MQTT_ADAPTER_MQTT_TARGET_PORT: 1883
      MF_MQTT_ADAPTER_WS_TARGET_HOST: vernemq
      MF_MQTT_ADAPTER_WS_TARGET_PORT: 8080
      MF_JAEGER_URL: jaeger:6831
      MF_THINGS_AUTH_GRPC_URL: things:8183
      MF_THINGS_AUTH_GRPC_TIMEOUT: 1s
      MF_AUTH_CACHE_URL: auth-redis:6379
    networks:
      - mainflux-base-net

  ## HTTP ADAPTER
  http-adapter:
    image: mainflux/http:latest
    container_name: mainflux-http
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      MF_HTTP_ADAPTER_LOG_LEVEL: debug
      MF_HTTP_ADAPTER_PORT: 8185
      MF_NATS_URL: nats://nats:4222
      MF_JAEGER_URL: jaeger:6831
      MF_THINGS_AUTH_GRPC_URL: things:8183
      MF_THINGS_AUTH_GRPC_TIMEOUT: 1s
    ports:
      - 8185:8185
    networks:
      - mainflux-base-net

  es-redis:
    image: redis:5.0-alpine
    container_name: mainflux-es-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-es-redis-volume:/data

  ## OPC-UA ADAPTER
  opcua-redis:
    image: redis:5.0-alpine
    container_name: mainflux-opcua-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-opcua-redis-volume:/data

  opcua-adapter:
    image: mainflux/opcua:latest
    container_name: mainflux-opcua
    depends_on:
      - nats
    restart: on-failure
    environment:
      MF_OPCUA_ADAPTER_HTTP_PORT: 8188
      MF_OPCUA_ADAPTER_LOG_LEVEL: debug
      MF_NATS_URL: nats://nats:4222
      MF_OPCUA_ADAPTER_POLICY: 
      MF_OPCUA_ADAPTER_MODE: 
      MF_OPCUA_ADAPTER_CERT_FILE: 
      MF_OPCUA_ADAPTER_KEY_FILE: 
      MF_OPCUA_ADAPTER_ROUTE_MAP_URL: opcua-redis:6379
      MF_OPCUA_ADAPTER_ROUTE_MAP_PASS: 
      MF_OPCUA_ADAPTER_ROUTE_MAP_DB: 0
      MF_THINGS_ES_URL: es-redis:6379
      MF_THINGS_ES_PASS: 
      MF_THINGS_ES_DB: 0
      MF_OPCUA_ADAPTER_EVENT_CONSUMER: opcua
    ports:
      - 8188:8188
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-opcua-adapter-volume:/store

  ## INFLUX DB
  influxdb:
    image: influxdb:1.8.3
    container_name: mainflux-influxdb
    restart: on-failure
    environment:
      INFLUXDB_DB: mainflux
      INFLUXDB_ADMIN_USER: mainflux
      INFLUXDB_ADMIN_PASSWORD: mainflux
    networks:
      - mainflux-base-net
    ports:
      - 8086:8086
    volumes:
      - mainflux-influxdb-volume:/var/lib/influxdb

  influxdb-writer:
    image: mainflux/influxdb-writer:latest
    container_name: mainflux-influxdb-writer
    depends_on:
      - influxdb
      - nats
    restart: on-failure
    environment:
      MF_INFLUX_WRITER_LOG_LEVEL: debug
      MF_NATS_URL: nats://nats:4222
      MF_INFLUX_WRITER_PORT: 8900
      MF_INFLUX_WRITER_BATCH_SIZE: 5000
      MF_INFLUX_WRITER_BATCH_TIMEOUT: 5
      MF_INFLUX_WRITER_DB: mainflux
      MF_INFLUX_WRITER_DB_HOST: mainflux-influxdb
      MF_INFLUX_WRITER_DB_PORT: 8086
      MF_INFLUX_WRITER_DB_USER: mainflux
      MF_INFLUX_WRITER_DB_PASS: mainflux
    ports:
      - 8900:8900
    networks:
      - mainflux-base-net
    volumes:
      - ./subjects.toml:/config/subjects.toml

  grafana:
    image: grafana/grafana:7.3.7
    container_name: mainflux-grafana
    depends_on:
      - influxdb
    restart: on-failure
    ports:
      - 3001:3000
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-grafana-volume:/var/lib/grafana

  influxdb-reader:
    image: mainflux/influxdb-reader:latest
    container_name: mainflux-influxdb-reader
    restart: on-failure
    environment:
      MF_INFLUX_READER_LOG_LEVEL: debug
      MF_INFLUX_READER_PORT: 8905
      MF_INFLUX_READER_DB: mainflux
      MF_INFLUX_READER_DB_HOST: mainflux-influxdb
      MF_INFLUX_READER_DB_PORT: 8086
      MF_INFLUX_READER_DB_USER: mainflux
      MF_INFLUX_READER_DB_PASS: mainflux
      MF_INFLUX_READER_SERVER_CERT: 
      MF_INFLUX_READER_SERVER_KEY: 
      MF_JAEGER_URL: jaeger:6831
      MF_THINGS_AUTH_GRPC_URL: things:8183
      MF_THINGS_AUTH_GRPC_TIMEOUT: 1s
    ports:
      - 8905:8905
    networks:
      - mainflux-base-net
    volumes:
      - ../../ssl/certs:/etc/ssl/certs

  ## LORA ADAPTER
  lora-redis:
    image: redis:5.0-alpine
    container_name: mainflux-lora-redis
    restart: on-failure
    networks:
      - mainflux-base-net

  lora-adapter:
    image: mainflux/lora:latest
    container_name: mainflux-lora
    depends_on:
      - nats
    restart: on-failure
    environment:
      MF_LORA_ADAPTER_LOG_LEVEL: debug
      MF_THINGS_ES_URL: es-redis:6379
      MF_LORA_ADAPTER_ROUTE_MAP_URL: lora-redis:6379
      MF_LORA_ADAPTER_MESSAGES_URL: tcp://lora.mqtt.mainflux.io:1883
      MF_LORA_ADAPTER_HTTP_PORT: 8187
      MF_NATS_URL: nats://nats:4222
    ports:
      - 8187:8187
    networks:
      - mainflux-base-net

  ## BOOTSTRAP
  bootstrap-db:
    image: postgres:13.1-alpine
    container_name: mainflux-bootstrap-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: bootstrap
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-bootstrap-db-volume:/var/lib/postgresql/data

  bootstrap:
    image: mainflux/bootstrap:latest
    container_name: mainflux-bootstrap
    depends_on:
      - bootstrap-db
    restart: on-failure
    ports:
      - 8202:8202
    environment:
      MF_BOOTSTRAP_LOG_LEVEL: debug
      MF_BOOTSTRAP_DB_HOST: bootstrap-db
      MF_BOOTSTRAP_DB_PORT: 5432
      MF_BOOTSTRAP_DB_USER: mainflux
      MF_BOOTSTRAP_DB_PASS: mainflux
      MF_BOOTSTRAP_DB: bootstrap
      MF_BOOTSTRAP_DB_SSL_MODE: disable
      MF_BOOTSTRAP_PORT: 8202
      MF_SDK_BASE_URL: http://mainflux-things:8182
      MF_THINGS_ES_URL: es-redis:6379
      MF_BOOTSTRAP_ES_URL: es-redis:6379
      MF_JAEGER_URL: jaeger:6831
      MF_AUTH_GRPC_URL: auth:8181
      MF_AUTH_GRPC_TIMMEOUT: 1s
    networks:
      - mainflux-base-net

  # Provision
  provision:
    image: mainflux/provision:latest
    container_name: mainflux-provision
    restart: on-failure
    networks:
      - mainflux-base-net
    ports:
      - 8190:8190
    environment:
      MF_PROVISION_LOG_LEVEL: debug
      MF_PROVISION_HTTP_PORT: 8190
      MF_PROVISION_CONFIG_FILE: /configs/config.toml
      MF_PROVISION_ENV_CLIENTS_TLS: "false"
      MF_PROVISION_SERVER_CERT: 
      MF_PROVISION_SERVER_KEY: 
      MF_PROVISION_MQTT_URL: tcp://localhost
      MF_PROVISION_USERS_LOCATION: http://localhost:8180
      MF_PROVISION_THINGS_LOCATION: http://things:8182
      MF_PROVISION_USER: 
      MF_PROVISION_PASS: 
      MF_PROVISION_API_KEY: 
      MF_PROVISION_CERTS_SVC_URL: http://certs:8204
      MF_PROVISION_X509_PROVISIONING: "false"
      MF_PROVISION_BS_SVC_URL: http://bootstrap:8202/things
      MF_PROVISION_BS_SVC_WHITELIST_URL: http://bootstrap:8202/things/state
      MF_PROVISION_BS_CONFIG_PROVISIONING: "true"
      MF_PROVISION_BS_AUTO_WHITELIST: "true"
      MF_PROVISION_BS_CONTENT: 
      MF_PROVISION_CERTS_RSA_BITS: 4096
      MF_PROVISION_CERTS_HOURS_VALID: 2400h
    volumes:
      - ./configs:/configs
      - ../ssl/certs/ca.key:/etc/ssl/certs/ca.key
      - ../ssl/certs/ca.crt:/etc/ssl/certs/ca.crt

  ## TWINS
  twins-db:
    image: mongo:bionic
    command: mongod --port 27018
    container_name: mainflux-twins-db
    restart: on-failure
    environment:
      MONGO_INITDB_DATABASE: mainflux-twins
    ports:
      - 27018:27018
    networks:
      mainflux-base-net:
    volumes:
      - mainflux-twins-db-volume:/data/db
      - mainflux-twins-db-configdb-volume:/data/configdb

  twins:
    image: mainflux/twins:latest
    container_name: mainflux-twins
    depends_on:
      - twins-db
      - nats
    restart: on-failure
    environment:
      MF_TWINS_LOG_LEVEL: debug
      MF_TWINS_HTTP_PORT: 9021
      MF_TWINS_DB: mainflux-twins
      MF_TWINS_DB_HOST: twins-db
      MF_TWINS_DB_PORT: 27018
      MF_TWINS_CHANNEL_ID: 
      MF_NATS_URL: nats://nats:4222
      MF_AUTH_GRPC_URL: auth:8181
      MF_AUTH_GRPC_TIMEOUT: 1s
      MF_TWINS_CACHE_URL: es-redis:6379
      MF_TWINS_CACHE_PASS: 
      MF_TWINS_CACHE_DB: 0
    ports:
      - 9021:9021
    networks:
      - mainflux-base-net
